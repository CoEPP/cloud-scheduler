#!/bin/sh
#
# change_image_password - script to change root password of a VM image

EXPECTED_ARGUMENTS=1
SCRIPT_NAME=`basename $0`

if [ $USER != "root" ]; then

    echo "This script needs to be run as root"
    exit 1
fi



if [ $# -ne $EXPECTED_ARGUMENTS ]; then

    echo "Usage: $SCRIPT_NAME vmimage[.gz]"
    exit 1
fi

read -s -p "New VM Root Password: " NEWPASSWD
echo

IMAGE_FILE=$1

echo -n "Creating temporary directory..."
TMPDIR=`mktemp -d /tmp/${SCRIPT_NAME}.XXXXXX`
if [ $? -ne 0 ] ; then
    echo
    echo "Error: $SCRIPT_NAME can't create temp file."
    exit 1
fi
MOUNTPOINT=$TMPDIR/mnt
mkdir $MOUNTPOINT
echo done

GZIP_TEST=`file ${IMAGE_FILE} | grep gzip`
if [ -n "$GZIP_TEST" ]; then

    echo -n "Gunzipping image..."
    ORIGINAL_NAME=${IMAGE_FILE%.[^.]*}
    EXTRACTED_IMAGE=${TMPDIR}/${ORIGINAL_NAME}
    gunzip -c ${IMAGE_FILE} > ${EXTRACTED_IMAGE}
    if [ $? -ne 0 ] ; then
        echo
        echo "Problem unzipping ${IMAGE_FILE}. Have you run out of space?"
        exit 1
    fi
    echo done

else 
    EXTRACTED_IMAGE=$IMAGE_FILE
fi


echo -n "Checking that file is a filesystem partition..."
PARTITION_TEST=`file ${EXTRACTED_IMAGE} | grep filesystem`
if [ -n "$PARTITION_TEST" ]; then
    echo ok
else
    echo "uh oh!"
    echo "${IMAGE_FILE} doesn't seem to have a filesystem on it. exiting..."
    exit 1
fi


echo -n "Mounting file..."
mount -o loop ${EXTRACTED_IMAGE} ${MOUNTPOINT}
echo done


echo -n Setting password...
/usr/sbin/chroot ${MOUNTPOINT} echo ${NEWPASSWD} |\
/usr/sbin/chroot ${MOUNTPOINT} passwd --stdin root > /dev/null
echo done

echo -n "Unmounting file..."
umount ${MOUNTPOINT}
echo done

if [ `dirname ${EXTRACTED_IMAGE}` != `dirname ${IMAGE_FILE}` ]; then
    echo -n "Moving new filesystem..."
    mv ${EXTRACTED_IMAGE} `dirname ${IMAGE_FILE}`
    echo done
fi

echo -n "Cleaning up..."
rm -Rf $TMPDIR
echo done

echo
echo "All done! Your VM image with the changed password is now at:"
echo `dirname ${IMAGE_FILE}`/`basename ${EXTRACTED_IMAGE}`
